#include "../include/tweet.h"
#include <iostream>
#include <vector>
using namespace std;



int binarySearch(const std::vector<Tweet>& tweets, long long key, const std::string& sortBy)
{
    int left = 0;
    int right = tweets.size() - 1;

    while(left <= right){
        int mid = left + (right - left)/2;
        long long val;

        if(sortBy == "tweetID"){
            val = tweets[mid].tweetID;
        }
        else if(sortBy == "retweetCount"){
            val = tweets[mid].retweetCount;
        }
        else if(sortBy == "favoriteCount"){
            val = tweets[mid].favoriteCount;
        }
        else{
            cout << "Not a valid sortBy" << endl;
            return -1;
        }

        if(val < key){
            left = mid + 1;
        }else if(val > key){
            right = mid - 1;
        }else{
            return mid;
        }
    }

    cout << "Could not find tweet." << endl;
    return -1;
}

int countAboveThreshold(const std::vector<Tweet>& tweets, const std::string& metric, int threshold) 
{
    int count = 0;
    int size = tweets.size();

    for(int i=0; i<size; i++){
        if(metric == "tweetID" && tweets[i].tweetID > threshold){
            count++;
        }
        else if(metric == "retweetCount" && tweets[i].retweetCount > threshold){
            count++;
        }
        else if(metric == "favoriteCount" && tweets[i].favoriteCount > threshold){
            count++;
        }
    }

    return count;
}


